#!/usr/bin/python

from __future__ import print_function
import subprocess
import os
import sys
from datetime import timedelta

QSUB = '/opt/torque/bin/qsub'
RESP = 'RESP'


def gen_samples_walltime(dist_code, num_obvs):
    return timedelta(seconds=num_obvs * 90.0 / 1000 + 30.0)

def estimate_walltime(command, args):
    if command == 'gen-samples':
        dist_code = args[0]
        num_obvs = int(args[1])
        return gen_samples_walltime(dist_code, num_obvs)

def popen_args(env):
    jname = sys.argv[0]
    meth_call = sys.argv[1]
    wtime = str(estimate_walltime(meth_call, sys.argv[2:]))
    opts = ' '.join(["'%s'" % v for v in sys.argv[1:]])
    env = os.environ.copy()
    env['_RET'] = opts
    args = [QSUB,
            '-N', jname,
            '-l', 'walltime=%s' % wtime,
            '-v', '_RET',
            '%s/WDE/pywde-run/plan.pbs' % env['HOME']
            ]
    cwd = '%s/%s/job.output' % (env['HOME'], RESP)
    if not os.path.exists(cwd):
        os.makedirs(cwd)
    return args, env, cwd


def main():
    args, env, cwd = popen_args(os.environ.copy())
    print('submitting: plan.pbs', env['_RET'])
    ret = subprocess.call(args, env=env, cwd=cwd)
    exit(ret)


if __name__ == '__main__':
    main()
